generator client {
  provider      = "prisma-client-js"
  binaryTargets = "debian-openssl-1.1.x"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int                 @id @default(autoincrement())
  telegramId          Int                 @unique
  username            String?             @unique
  displayName         String?
  admin               Boolean
  about               String?
  patsReceived        Pat[]               @relation("patted")
  patsGiven           Pat[]               @relation("patter")
  petsReceived        Pet[]               @relation("petted")
  petsGiven           Pet[]               @relation("petter")
  favoriteStickerSets StickerSetOnUsers[]
}

model Pet {
  id       Int      @id @default(autoincrement())
  time     DateTime @default(now())
  petterId Int
  pettedId Int
  petted   User     @relation("petted", fields: [pettedId], references: [id])
  petter   User     @relation("petter", fields: [petterId], references: [id])
}

model Pat {
  id       Int      @id @default(autoincrement())
  time     DateTime @default(now())
  patterId Int
  pattedId Int
  patted   User     @relation("patted", fields: [pattedId], references: [id])
  patter   User     @relation("patter", fields: [patterId], references: [id])
}

model StickerSet {
  id            Int                 @id @default(autoincrement())
  setName       String              @unique
  stickers      Sticker[]
  favoriteUsers StickerSetOnUsers[]
}

model StickerSetOnUsers {
  timeAdded    DateTime   @default(now())
  stickerSetId Int
  userId       Int
  stickerSet   StickerSet @relation(fields: [stickerSetId], references: [id])
  user         User       @relation(fields: [userId], references: [id])

  @@id([stickerSetId, userId])
}

model Sticker {
  id           Int                         @id @default(autoincrement())
  file_id      String                      @unique
  stickerSetId Int
  createdAt    DateTime                    @default(now())
  stickerSet   StickerSet                  @relation(fields: [stickerSetId], references: [id])
  categories   StickerCategoryOnStickers[]
}

model StickerCategory {
  id       Int                         @id @default(autoincrement())
  name     String                      @unique
  nsfw     Boolean
  stickers StickerCategoryOnStickers[]
}

model StickerCategoryOnStickers {
  stickerId  Int
  categoryId Int
  category   StickerCategory @relation(fields: [categoryId], references: [id])
  sticker    Sticker         @relation(fields: [stickerId], references: [id])

  @@id([stickerId, categoryId])
}
